import java.util.Arrays;
import java.util.Scanner;

public class GradebookSystem {

    static class Student {
        String name;
        int[] grades;

        public Student(String name, int[] grades) {
            this.name = name;
            this.grades = grades;
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Student[] students = new Student[100]; // Maximum 100 students

        int studentCount = 0;

        int choice;
        do {
            System.out.println("\nGradebook System Menu");
            System.out.println("1. Add Student");
            System.out.println("2. Enter Grades");
            System.out.println("3. View Grades");
            System.out.println("4. Calculate Class Statistics");
            System.out.println("5. Retrieve Individual Student Grades");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    if (studentCount < students.length) {
                        students[studentCount] = addStudent(scanner);
                        studentCount++;
                    } else {
                        System.out.println("Maximum number of students reached.");
                    }
                    break;
                case 2:
                    enterGrades(scanner, students, studentCount);
                    break;
                case 3:
                    viewGrades(students, studentCount);
                    break;
                case 4:
                    calculateClassStatistics(students, studentCount);
                    break;
                case 5:
                    retrieveStudentGrades(scanner, students, studentCount);
                    break;
                case 6:
                    System.out.println("Exiting Gradebook System. Goodbye!");
                    break;
                default:
                    System.out.println("Invalid choice. Please enter a valid option.");
            }
        } while (choice != 6);

        scanner.close();
    }

    private static Student addStudent(Scanner scanner) {
        System.out.print("Enter student name: ");
        String name = scanner.next();
        return new Student(name, null);
    }

    private static void enterGrades(Scanner scanner, Student[] students, int studentCount) {
        System.out.print("Enter student ID: ");
        int studentId = scanner.nextInt();

        if (studentId >= 1 && studentId <= studentCount) {
            System.out.print("Enter number of grades: ");
            int numGrades = scanner.nextInt();

            int[] grades = new int[numGrades];
            for (int i = 0; i < numGrades; i++) {
                System.out.print("Enter grade " + (i + 1) + ": ");
                grades[i] = scanner.nextInt();
            }

            students[studentId - 1].grades = grades;
            System.out.println("Grades entered successfully.");
        } else {
            System.out.println("Invalid student ID.");
        }
    }

    private static void viewGrades(Student[] students, int studentCount) {
        System.out.println("Student Grades:");
        for (int i = 0; i < studentCount; i++) {
            System.out.println("Student " + (i + 1) + ": " + students[i].name + " - Grades: " + Arrays.toString(students[i].grades));
        }
    }

    private static void calculateClassStatistics(Student[] students, int studentCount) {
        int total = 0;
        int highest = Integer.MIN_VALUE;
        int lowest = Integer.MAX_VALUE;

        for (int i = 0; i < studentCount; i++) {
            if (students[i].grades != null) {
                for (int grade : students[i].grades) {
                    total += grade;
                    if (grade > highest) {
                        highest = grade;
                    }
                    if (grade < lowest) {
                        lowest = grade;
                    }
                }
            }
        }

        if (studentCount > 0) {
            double average = (double) total / studentCount;
            System.out.println("Class Statistics:");
            System.out.println("Average: " + average);
            System.out.println("Highest Grade: " + highest);
            System.out.println("Lowest Grade: " + lowest);
        } else {
            System.out.println("No students in the class.");
        }
    }

    private static void retrieveStudentGrades(Scanner scanner, Student[] students, int studentCount) {
        System.out.print("Enter student ID: ");
        int studentId = scanner.nextInt();

        if (studentId >= 1 && studentId <= studentCount) {
            if (students[studentId - 1].grades != null) {
                System.out.println("Grades for " + students[studentId - 1].name + ": " + Arrays.toString(students[studentId - 1].grades));
            } else {
                System.out.println("Grades not available for this student.");
            }
        } else {
            System.out.println("Invalid student ID.");
        }
    }
}
